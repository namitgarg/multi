<?php
/**
 * @file
 * Main file for the Metatag Replace module.
 */

/**
 * Provides Search and Replace permisssions to different Roles.
 */
function metatag_replace_permission() {
  return array(
    'metatag_replace' => array(
      'title' => t('Metatag Search'),
      'description' => t('Allow people to search with Metatag Replace'),
    ),
    'metatag_replace_confirm' => array(
      'title' => t('Metatag Replace'),
      'description' => t('Allow people to Replace with Metatag replace'),
    ),
  );
}
/**
 * Implements metatag_replace_menu for the module.
 */
function metatag_replace_help($path, $arg) {
  switch ($path) {
    case "admin/help#metatag_replace":
      $text = t("<h1>Metatag Replace</h1><p>Metatag Replace is used to either search or replace Meta tags on your site. 
   It Uses Batch API to Read Meta tags and perform operation on them.
   Module supports 4 fields which are provided by <a href='https://www.drupal.org/project/metatag'>Metatag module</a> . 
   This module provides a form for user to search and replace Meta tags. For more Information Please visit the project page
   <a href='https://www.drupal.org/node/2623618'>https://www.drupal.org/node/2623618</a></p>
   <ul>
	 <li>There are options to select particular Content types.</li>
	 <li>Whether we want case sensitive search or not.</li>
	 <li>We can Match Exact Word or not.</li>
	<li>User can choose to select to perform operation Individual Meta Fields or All</li>
	<li>This Modules Creates Revision of each page it changes</li>
  </ul>");
      return $text;
  }
}

/**
 * Implements metatag_replace_menu() for the module.
 */
function metatag_replace_menu() {
  $items['admin/config/search/metatags/replace'] = array(
    'title callback' => 'Change Metatags',
    'title' => 'MetaTag Replace',
    'description' => 'Replace the MetaTags',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('metatag_replace_form'),
    'access arguments' => array('metatag_replace'),
    'file' => 'metatag_replace_admin.inc',
    'type' => MENU_LOCAL_TASK,
  );

  $items['admin/config/search/metatags/replace/confirm'] = array(
    'title' => 'Confirm Replace',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('metatag_replace_confirm_form'),
    'access arguments' => array('metatag_replace_confirm'),
    'file' => 'metatag_replace_admin.inc',
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implements metatag_replace_theme().
 */
function metatag_replace_theme() {
$items= array(
    'metatag_replace_operation_search' => array(
     'variables' =>$_SESSION['metatag_replace_result_of_search'],
    ),
    'metatag_replace_operation_replace' => array(
     'variables' =>$_SESSION['metatag_replace_result_of_replace'],
    ),
  );
print(" theme function<pre>");
  print_r($_SESSION['metatag_replace_result_of_search']);
  print("</pre>");
  return $items;
}

/**
 * 
 * @param type $result
 * @return type
 */
function theme_metatag_replace_operation_search($result)
{
  print("result variables in search theme function <pre>");
  print_r($result);
  print("</pre>");
  if(!empty($result['matches']))
 {
  $meta_field = $result['field_result'];
  $title = t('Metatag Replace Result for Search');
  $type = 'ol';
  $attributes = array(
    'id' => 'metatag-replace-result-search',
    'class' => 'metatag-replace-result',
  );
  if ($meta_field != 'all') {
    $search_meta_list = $result['matches'];
    $search_node_link = $result['detail']['node_link'];
    foreach ($search_node_link as $keys => $values) {
      $items[] = array(
        'data' => $values,
        'children' => array(
          'data' => "Meta $meta_field : " . $search_meta_list[$keys],
        ),
      );
    }
  }
  else {
    foreach ($result['matches'] as $keys => $values) {
     $items[] = array(
       'data' => $result['detail'][$keys]['node_link'][0],
       'children' => $values,
     );
    }
  }
  return theme('item_list', array(
      'items' => $items,
      'title' => $title,
      'type' => $type,
      'attributes' => $attributes,
    )
    );
}
}

function theme_metatag_replace_operation_replace($result)
{
  if (!empty($result['detail'])) {
    $meta_field = $result['field_result'];
    $title = t('Metatag Replace Result for Replace');
    $type = 'ol';
    $attributes = array(
      'id' => 'metatag-replace-result-replace',
      'class' => 'metatag-replace-result',
    );
    if ($meta_field != 'all') {
        $replace_meta_list = $result['replace'];
        $replace_node_link = $result['detail']['node_link'];
        foreach ($replace_node_link as $keys => $values) {
            $items[] = array(
              'data' => $values,
              'children' => array(
                'data' => "Meta $meta_field : $replace_meta_list[$keys]",
              ),
            );
        }
    }
    else {
        foreach ($result['replace'] as $keys => $values) {
            $items[] = array(
              'data' => $result['detail'][$keys]['node_link'],
              'children' => $values,
            );
        }
    }
    return theme('item_list', array(
      'items' => $items,
      'title' => $title,
      'type' => $type,
      'attributes' => $attributes,
    )
    );
}
}

